// Mocks generated by Mockito 5.4.5 from annotations
// in kites_news_app/test/articles/data/repositories/news_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:dio/dio.dart' as _i2;
import 'package:kites_news_app/src/core/network/web_service.dart' as _i3;
import 'package:kites_news_app/src/features/news/data/data_sources/remote/news_impl_api.dart'
    as _i6;
import 'package:kites_news_app/src/features/news/domain/models/category_response.dart'
    as _i5;
import 'package:kites_news_app/src/features/news/domain/models/list_of_category_model.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCancelToken_0 extends _i1.SmartFake implements _i2.CancelToken {
  _FakeCancelToken_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeApiService_1 extends _i1.SmartFake implements _i3.ApiService {
  _FakeApiService_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeListOfCategoryResponse_2 extends _i1.SmartFake
    implements _i4.ListOfCategoryResponse {
  _FakeListOfCategoryResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCategoryResponse_3 extends _i1.SmartFake
    implements _i5.CategoryResponse {
  _FakeCategoryResponse_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [NewsImplApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsImplApi extends _i1.Mock implements _i6.NewsImplApi {
  MockNewsImplApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CancelToken get cancelToken =>
      (super.noSuchMethod(
            Invocation.getter(#cancelToken),
            returnValue: _FakeCancelToken_0(
              this,
              Invocation.getter(#cancelToken),
            ),
          )
          as _i2.CancelToken);

  @override
  set cancelToken(_i2.CancelToken? _cancelToken) => super.noSuchMethod(
    Invocation.setter(#cancelToken, _cancelToken),
    returnValueForMissingStub: null,
  );

  @override
  _i3.ApiService get apiService =>
      (super.noSuchMethod(
            Invocation.getter(#apiService),
            returnValue: _FakeApiService_1(
              this,
              Invocation.getter(#apiService),
            ),
          )
          as _i3.ApiService);

  @override
  set apiService(_i3.ApiService? _apiService) => super.noSuchMethod(
    Invocation.setter(#apiService, _apiService),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<_i4.ListOfCategoryResponse> getListOfCategory() =>
      (super.noSuchMethod(
            Invocation.method(#getListOfCategory, []),
            returnValue: _i7.Future<_i4.ListOfCategoryResponse>.value(
              _FakeListOfCategoryResponse_2(
                this,
                Invocation.method(#getListOfCategory, []),
              ),
            ),
          )
          as _i7.Future<_i4.ListOfCategoryResponse>);

  @override
  _i7.Future<_i5.CategoryResponse> getCategoryResponse({
    String? selectedCategory,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getCategoryResponse, [], {
              #selectedCategory: selectedCategory,
            }),
            returnValue: _i7.Future<_i5.CategoryResponse>.value(
              _FakeCategoryResponse_3(
                this,
                Invocation.method(#getCategoryResponse, [], {
                  #selectedCategory: selectedCategory,
                }),
              ),
            ),
          )
          as _i7.Future<_i5.CategoryResponse>);
}
